import type { Metadata } from "next";
import { Cairo, Roboto } from "next/font/google";
import "@/styles/globals.css";
import Header from "@/components/header";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { Directions, Languages } from "@/constants/enum";
import { notFound } from "next/navigation";
import { routing } from '@/i18n/routing';


export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

const cairo = Cairo({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  preload: true,
});

const roboto = Roboto({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  preload: true,
});

export const metadata: Metadata = {
  title: "X Center",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {

  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale} dir={locale === Languages.AR ? Directions.RTL : Directions.LTR}>
      <body
        className={`${locale === Languages.AR ? cairo.className : roboto.className} min-container`}
      >
        <NextIntlClientProvider>
          <Header />
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
